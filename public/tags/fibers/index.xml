<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fibers on Это неправильные пчелы</title>
    <link>http://www.romange.com/tags/fibers/</link>
    <description>Recent content in Fibers on Это неправильные пчелы</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 15 Dec 2018 11:59:52 +0300</lastBuildDate>
    
	<atom:link href="http://www.romange.com/tags/fibers/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Introduction to fibers in c&#43;&#43;</title>
      <link>http://www.romange.com/2018/12/15/introduction-to-fibers-in-c--/</link>
      <pubDate>Sat, 15 Dec 2018 11:59:52 +0300</pubDate>
      
      <guid>http://www.romange.com/2018/12/15/introduction-to-fibers-in-c--/</guid>
      <description>In my post about Seastar we&amp;rsquo;ve covered continuations style asynchronous programming. My personal opinion is that this style is hard to work with in C++. In this post I would like to cover alternative, Fiber-based approach. In this post I will use Boost.Fibers library in all my examples.
Fibers, or green threads, or cooperative threads are similar to regular threads but with few important distinctions:
 Fibers can not switch between system threads and they are usually pinned to a specific thread.</description>
    </item>
    
  </channel>
</rss>